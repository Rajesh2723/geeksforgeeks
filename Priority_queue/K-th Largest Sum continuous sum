You are given an array Arr of size N. You have to find the K-th largest sum of contiguous subarray within the array elements.

 

Example 1:

Input:
N = 3
K = 2
Arr = {3,2,1}
Output:
5
Explanation:
The different subarray sums we can get from the array
are = {6,5,3,2,1}. Where 5 is the 2nd largest.
///
int kthLargest(vector<int> &Arr,int N,int K){
        priority_queue<int>p;
        for(int i=0;i<N;i++){
            int sum=Arr[i];
            p.push(sum);
            for(int j=i+1;j<N;j++){
                sum+=Arr[j];
                p.push(sum);
            }
        }
        for(int i=1;i<K;i++){
            p.pop();
        }
        return p.top();
    }
